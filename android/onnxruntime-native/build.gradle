apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

signing {
    required(project.hasProperty("staging") || project.hasProperty("snapshot"))
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                pom {
                    name = "ONNXRuntime Android native library"
                    description = "ONNXRuntime Android native library binary distribution"
                    url = "http://www.djl.ai/android"
                    packaging = "aar"

                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "https://www.apache.org/licenses/LICENSE-2.0"
                        }
                    }

                    scm {
                        connection = "scm:git:git@github.com:deepjavalibrary/djl.git"
                        developerConnection = "scm:git:git@github.com:deepjavalibrary/djl.git"
                        url = "https://github.com/deepjavalibrary/djl"
                        tag = "HEAD"
                    }

                    developers {
                        developer {
                            name = "DJL.AI Team"
                            email = "djl-dev@amazon.com"
                            organization = "Amazon AI"
                            organizationUrl = "https://amazon.com"
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                if (project.hasProperty("snapshot")) {
                    name = "snapshot"
                    url = "https://oss.sonatype.org/content/repositories/snapshots/"
                    credentials {
                        username = findProperty("ossrhUsername")
                        password = findProperty("ossrhPassword")
                    }
                } else if (project.hasProperty("staging")) {
                    name = "staging"
                    url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username = findProperty("ossrhUsername")
                        password = findProperty("ossrhPassword")
                    }
                } else {
                    name = "local"
                    url = "build/repo"
                }
            }
        }
    }
}
configurations {
    exclusion
}

dependencies {
//    api "ai.djl:api:${version}"
//    api "ai.djl.android:core:${version}"
    embed  "ai.djl.onnxruntime:onnxruntime-engine:0.18.0"
    embed  "com.microsoft.onnxruntime:onnxruntime-android:1.11.0"
    exclusion "com.microsoft.onnxruntime:onnxruntime"
}






























//apply plugin: 'java-library'
//apply plugin: 'maven-publish'
//apply plugin: 'signing'
//
//
//group "ai.djl.android.onnxruntime"
//
//configurations {
//    exclusion
//}
//
//dependencies {
//
//    implementation "org.slf4j:slf4j-simple:1.7.36"
//    api "ai.djl:api:0.18.0"
//    api "ai.djl.android:core:0.11.0"
//    api "ai.djl.onnxruntime:onnxruntime-engine:0.18.0"
//    implementation "com.microsoft.onnxruntime:onnxruntime-android:1.11.0"
//    exclusion "com.microsoft.onnxruntime:onnxruntime"
//
////    api "org.bytedeco:javacpp:${javacpp_version}"
////    api "com.google.protobuf:protobuf-java:${protobuf_version}"
////    api "org.tensorflow:tensorflow-core-api:0.4.0"
////
////    exclusion "org.bytedeco:javacpp:${javacpp_version}"
////    exclusion "com.google.protobuf:protobuf-java:${protobuf_version}"
//}
//
//jar {
//    from {
//        (configurations.compileClasspath - configurations.exclusion).collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
//}
//
//publishing {
//    publications {
//        maven(MavenPublication) {
//            pom {
//                name = "DJL release for ONNTRuntime Android api"
//                description = "Deep Java Library (DJL) release for ONNTRuntime Android api"
////                url = "F://reps"
//                url = "http://www.djl.ai/android/onnxruntime-native/${project.name}"
//                groupId = "ai.djl.android"
////                artifactId = "onnxruntime-android"
////                version = "0.1.0"
////                artifact("$buildDir/outputs/aar/${project.getName()}-debug.aar")
//
//                withXml {
//                    def pomNode = asNode()
//                    pomNode.dependencies."*".findAll() {
//                        it.artifactId.text().startsWith("onnxruntime-") || it.artifactId.text().startsWith("ndarray")
//                    }.each() {
//                        it.parent().remove(it)
//                    }
//                }
//            }
//        }
//    }
//}
