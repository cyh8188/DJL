name: Native JNI S3 DLR

on:
  workflow_dispatch:

jobs:
  build-dlr-jni-cpu:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [macos-10.15, ubuntu-16.04]
        include:
        - operating-system: macos-10.15
          os: osx
        - operating-system: ubuntu-16.04
          os: linux

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Release JNI prep
        run: ./gradlew :dlr:dlr-native:compileJNI
      - name: Run test
        run: ./gradlew :dlr:dlr-engine:test
      - name: Copy files to S3 with the AWS CLI
        run: |
          DLR_VERSION="$(cat gradle.properties | awk -F '=' '/dlr_version/ {print $2}')"
          aws s3 cp dlr/dlr-native/build/*djl_dlr* s3://djl-ai/publish/dlr-${DLR_VERSION}/jnilib/0.10.0/${{ matrix.os }}-x86_64/
          aws cloudfront create-invalidation --distribution-id E371VB8JQ6NRVY --paths /dlr-${DLR_VERSION}/jnilib/
