name: Native JNI S3 DLR

on:
  workflow_dispatch:

jobs:
  build-dlr-jni-cpu:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ macos-10.15 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Release JNI prep
        run: ./gradlew :dlr:dlr-native:compileJNI
      - name: Upload compiled JNI library
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: jnilib-${{ runner.os }}
          path: dlr/dlr-native/jnilib

  publish:
    runs-on: ubuntu-18.04
    needs: [ build-dlr-jni-cpu ]
    steps:
      - uses: actions/checkout@v2
      - name: Download compiledJNI Mac
        uses: actions/download-artifact@v2
        with:
          name: jnilib-macOS
          path: jnilib
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Copy files to S3 with the AWS CLI
        run: |
          DLR_VERSION="$(cat gradle.properties | awk -F '=' '/dlr_version/ {print $2}')"
          aws s3 sync jnilib s3://djl-ai/publish/dlr-${DLR_VERSION}/jnilib
      # TODO add test here
