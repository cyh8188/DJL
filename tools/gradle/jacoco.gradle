apply plugin: 'jacoco'

def jacocoProjects = subprojects.findAll {
    if ([":mxnet:jnarator", ":tensorflow:engine", ":examples", ":integration"].contains(it.getPath())) {
        return false
    }
    return new File(it.projectDir, "src/test/java").exists()
}

task jacocoMergeTestData(type: JacocoMerge) {
    jacocoProjects.each { subproject ->
        dependsOn(subproject.test, subproject.jacocoTestReport)
        executionData subproject.tasks.withType(Test)
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn jacocoMergeTestData
    description = 'Generates an aggregate report from all subprojects'

    jacocoProjects.each { p ->
        additionalSourceDirs.from files((Set<File>) p.sourceSets.main.allJava.srcDirs)
        sourceDirectories.from files((Set<File>) p.sourceSets.main.allSource.srcDirs)
        classDirectories.from files((FileCollection) p.sourceSets.main.output)
        additionalClassDirs((FileCollection) p.sourceSets.main.output)
    }
    executionData.from = files(jacocoProjects.jacocoTestReport.executionData).filter { f -> f.exists() }

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
